name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'clients/**/*.sql'
      - 'clients/**/*.yml'
      - 'clients/**/*.py'

jobs:
  claude-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            clients/**/*.sql
            clients/**/*.yml
            clients/**/*.py
          
      - name: Claude Code Review
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@v7
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        with:
          script: |
            const { execSync } = require('child_process');
            
            // Get diff for changed files
            const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}'.split(' ');
            
            for (const file of changedFiles) {
              if (!file) continue;
              
              try {
                const diff = execSync(`git diff origin/main...HEAD -- "${file}"`, { encoding: 'utf8' });
                
                if (diff.trim()) {
                  const response = await fetch('https://api.anthropic.com/v1/messages', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                      'X-API-Key': process.env.ANTHROPIC_API_KEY,
                      'anthropic-version': '2023-06-01'
                    },
                    body: JSON.stringify({
                      model: 'claude-3-sonnet-20240229',
                      max_tokens: 1000,
                      messages: [{
                        role: 'user',
                        content: `Please review this ${file.endsWith('.sql') ? 'dbt SQL' : 'configuration'} file change for:
                        
                        1. Code quality and best practices
                        2. dbt conventions and patterns
                        3. Performance considerations
                        4. Data quality concerns
                        5. Security issues
                        
                        File: ${file}
                        
                        Diff:
                        \`\`\`
                        ${diff}
                        \`\`\`
                        
                        Provide specific, actionable feedback in markdown format.`
                      }]
                    })
                  });
                  
                  const data = await response.json();
                  const review = data.content[0].text;
                  
                  // Post review as PR comment
                  await github.rest.pulls.createReviewComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: context.issue.number,
                    body: `## ðŸ¤– Claude Code Review: \`${file}\`\n\n${review}`,
                    path: file,
                    commit_id: context.payload.pull_request.head.sha,
                    line: 1
                  });
                }
              } catch (error) {
                console.log(`Error reviewing ${file}:`, error.message);
              }
            }